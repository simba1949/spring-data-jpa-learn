server.port=8080

## 数据源配置
# 数据源驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://172.17.35.120/example?characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=123456
# 数据源连接池类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

## druid 数据源配置（druid 官网配置信息：https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE ）
# 初始化大小连接池连接大小
spring.datasource.druid.initial-size=5
# 连接池中最小空闲数
spring.datasource.druid.min-idle=10
# 连接池中最大活动连接数
spring.datasource.druid.max-active=20
# 获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 每个连接最多缓存多少个SQL
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.validation-query=select 1
spring.datasource.druid.keep-alive=true

## jpa 配置
# 设置数据库类型
spring.jpa.database=mysql
# 是否显示SQL语句
spring.jpa.show-sql=true
# 自动创建数据库表策略：
# - create：程序运行时创建数据库表，如果存在则先删除在创建
# - update：程序运行时创建数据库表，如果存在则不处理
# - none：不会创建表
spring.jpa.hibernate.ddl-auto=update
spring.data.jpa.repositories.enabled=true
spring.data.jpa.repositories.bootstrap-mode=default